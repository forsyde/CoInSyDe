<?xml version="1.0"?>
<!DOCTYPE ForSyDe-SY-to-C SYSTEM "test.dtd">
<CoInSyDe_Project>
    <!-- USER-PROVIDED CODE --> 
    <native name="bool2int">
	<iport name="arg" class="arg" type="Bool"/>
	<oport name="ret" class="arg" type="Int"/>
	<requirement include="./bool2int.c"/>
    </native>

    <!-- SOFTWARE PATTERNS -->
    <pattern name="preMoore" type="comb">
	<iport name="i1" class="arg" type="Bool"/>
	<oport name="o1" class="arg" type="Int"/>
	<instance placeholder="func" component="bool2int" call="function">
	    <bind replace="arg" with="i1"/>
	    <bind replace="ret" with="o1"/>
	</instance>
    </pattern>
    <pattern name="mainProcess_moore" type="moore">
	<iport name="i1" class="arg" type="Int"/>
	<oport name="o1" class="arg" type="Int"/>
	<intern name="st" class="state" type="Int" value="0"/>
	<instance placeholder="ns_func" component="+" call="inline">
	    <bind replace="arg1" with="st"/>
	    <bind replace="arg2" with="i1"/>
	    <bind replace="ret" with="st"/>
	</instance>
	<instance placeholder="od_func" component="id" call="inline">
	    <bind replace="arg" with="st"/>
	    <bind replace="ret" with="o1"/>
	</instance>
    </pattern>

    <!-- CUSTOM COMPOSITE FUNCTIONS -->
    <!-- Their instances imply scheduling -->
    <composite name="mainProcess" type="top" call="function">
	<iport name="i" class="extern" type="Bool" mechanism="in_Read"/>
	<oport name="o" class="extern" type="Int" mechanism="out_Write"/>
	<intern name="fromBool" class="var" type="Int"/>
	<instance placeholder="1" component="preMoore" call="inline">
	    <bind replace="i1" with="i"/>
	    <bind replace="o1" with="fromBool"/>
	</instance>
	<instance placeholder="2" component="mainProcess_moore" call="function">
	    <bind replace="i1" with="fromBool"/>
	    <bind replace="o1" with="o"/>
	</instance>
	<intern name="formatStr" class="macro" value="%d"/>
	<instance placeholder="in_Read" component="stdinRead" call="inline">
	    <bind replace="in" with="i"/>
	    <bind replace="format" with="formatStr"/>
	</instance>
	<instance placeholder="out_Write" component="stdoutWrite" call="inline">
	    <bind replace="format" with="formatStr"/>
	    <bind replace="out" with="o"/>
	</instance>
    </composite>

</CoInSyDe_Project>
