native:
  name: bool2int
  interface:
  - {name: arg, class: iarg, type: Bool}
  - {name: ret, class: oarg, type: Int}
  requirement: {include: "./bool2int.c"}
pattern:
- name: preMoore
  type: comb
  interface:
  - name: i1
    class: iarg
    type: Bool
  - name: o1
    class: oarg
    type: Int
  instance:
    placeholder: func
    component: bool2int
    call: function
    bind:
    - replace: arg
      with: i1
    - replace: ret
      with: o1

- name: mainProcess_moore
  type: moore
  interface:
  - name: i1
    class: iarg
    type: Int
  - name: o1
    class: oarg
    type: Int
  - name: st
    class: state
    type: Int
    value: '0'
  instance:
  - placeholder: ns_func
    component: "+"
    inline: true
    bind:
    - replace: arg1
      with: st
    - replace: arg2
      with: i1
    - replace: ret
      with: st
  - placeholder: od_func
    component: id
    inline: true
    bind:
    - replace: arg
      with: st
    - replace: ret
      with: o1
template:
  name: top_mainProcess
  interface:
  - name: i
    class: iport
    type: Bool
    mechanism: in_Read
  - name: o
    class: oport
    type: Int
    mechanism: out_Write
  - name: fromBool
    class: var
    type: Int
  - name: formatStr
    class: macro
    value: "%d"
  instance:
  - placeholder: 1in_Read
    component: stdinRead
    inline: true
    bind:
    - replace: inp
      with: i
    - replace: form
      with: formatStr
  - placeholder: '2'
    component: preMoore
    inline: true
    bind:
    - replace: i1
      with: i
    - replace: o1
      with: fromBool
  - placeholder: '3'
    component: mainProcess_moore
    #inline: true
    bind:
    - replace: i1
      with: fromBool
    - replace: o1
      with: o
  - placeholder: 4out_Write
    component: stdoutWrite
    inline: true
    bind:
    - replace: form
      with: formatStr
    - replace: out
      with: o
  code: |
    {% for inst in instance %}
    {{ placeholder(inst) }}
    {% endfor %}
