<?xml version="1.0"?>
<!DOCTYPE ForSyDe-SY-to-C SYSTEM "test.dtd">
<ForSyDe-SY-to-C>
    <!-- SOFTWARE PATTERNS -->
    <pattern name="preMoore" type="comb" call="inline">
	<port dir="in" name="i1" type="Bool"/>
	<port dir="out" name="o1" type="Int32"/>
	<binding to="func" what="bool2int">
	    <parameter name="arg" value="i1"/>
	    <parameter name="ret" value="o1"/>
	</binding>
    </pattern>
    <pattern name="mainProcess_moore" type="moore" call="function">
	<port dir="in" name="i1" type="Int32"/>
	<port dir="out" name="o1" type="Int32"/>
	<port dir="state" name="st" type="Int32" value="0"/>
	<binding to="ns_func" what="+">
	    <parameter name="arg1" value="st"/>
	    <parameter name="arg2" value="i1"/>
	    <parameter name="ret" value="st"/>
	</binding>
	<binding to="od_func" what="id">
	    <parameter name="arg" value="st"/>
	    <parameter name="ret" value="o1"/>
	</binding>
    </pattern>

    <!-- CUSTOM COMPOSITE FUNCTIONS -->
    <!-- Their bindings imply scheduling -->
    <composite name="mainProcess" type="top" call="function">
	<port dir="in" name="i" type="Bool"/>
	<port dir="out" name="o" type="Int32"/>
	<port dir="var" name="fromBool" type="Int32"/>
	<binding to="1" what="preMoore">
	    <parameter name="i1" value="i"/>
	    <parameter name="o1" value="fromBool"/>
	</binding>
	<binding to="2" what="mainProcess_moore">
	    <parameter name="i1" value="fromBool"/>
	    <parameter name="o1" value="o"/>
	</binding>
    </composite>

    <!-- FUNCTION TEMPLATES -->
    <template name="+" call="inline">
	(| ret |) = (| arg1 |) + (| arg2 |);
    </template>
    <template name="id" call="inline">
	(| ret |) = (| arg |);
    </template>

    <!-- USER-PROVIDED CODE --> 
    <code name="bool2int" call="./int2bool.c">
	<port dir="in" name="arg" type="Bool"/>
	<port dir="out" name="ret" type="Int32"/>
    </code>
</ForSyDe-SY-to-C>
